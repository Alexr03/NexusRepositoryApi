/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.26.1-02
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using SonaTypeNexusRepoApi.Client;
using SonaTypeNexusRepoApi.Api;
using SonaTypeNexusRepoApi.Model;

namespace SonaTypeNexusRepoApi.Test
{
    /// <summary>
    ///  Class for testing SecurityManagementRolesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SecurityManagementRolesApiTests
    {
        private SecurityManagementRolesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SecurityManagementRolesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SecurityManagementRolesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SecurityManagementRolesApi
            //Assert.IsInstanceOfType(typeof(SecurityManagementRolesApi), instance, "instance is a SecurityManagementRolesApi");
        }

        
        /// <summary>
        /// Test Create
        /// </summary>
        [Test]
        public void CreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RoleXORequest body = null;
            //var response = instance.Create(body);
            //Assert.IsInstanceOf<RoleXOResponse> (response, "response is RoleXOResponse");
        }
        
        /// <summary>
        /// Test Delete
        /// </summary>
        [Test]
        public void DeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.Delete(id);
            
        }
        
        /// <summary>
        /// Test GetRole
        /// </summary>
        [Test]
        public void GetRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string source = null;
            //var response = instance.GetRole(id, source);
            //Assert.IsInstanceOf<RoleXOResponse> (response, "response is RoleXOResponse");
        }
        
        /// <summary>
        /// Test GetRoles
        /// </summary>
        [Test]
        public void GetRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //var response = instance.GetRoles(source);
            //Assert.IsInstanceOf<List<RoleXOResponse>> (response, "response is List<RoleXOResponse>");
        }
        
        /// <summary>
        /// Test Update1
        /// </summary>
        [Test]
        public void Update1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //RoleXORequest body = null;
            //instance.Update1(id, body);
            
        }
        
    }

}

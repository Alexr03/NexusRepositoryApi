/* 
 * Nexus Repository Manager REST API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.26.1-02
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using SonaTypeNexusRepoApi.Client;
using SonaTypeNexusRepoApi.Api;
using SonaTypeNexusRepoApi.Model;

namespace SonaTypeNexusRepoApi.Test
{
    /// <summary>
    ///  Class for testing SecurityCertificatesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SecurityCertificatesApiTests
    {
        private SecurityCertificatesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SecurityCertificatesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SecurityCertificatesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SecurityCertificatesApi
            //Assert.IsInstanceOfType(typeof(SecurityCertificatesApi), instance, "instance is a SecurityCertificatesApi");
        }

        
        /// <summary>
        /// Test AddCertificate
        /// </summary>
        [Test]
        public void AddCertificateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string body = null;
            //var response = instance.AddCertificate(body);
            //Assert.IsInstanceOf<ApiCertificate> (response, "response is ApiCertificate");
        }
        
        /// <summary>
        /// Test GetTrustStoreCertificates
        /// </summary>
        [Test]
        public void GetTrustStoreCertificatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTrustStoreCertificates();
            //Assert.IsInstanceOf<List<ApiCertificate>> (response, "response is List<ApiCertificate>");
        }
        
        /// <summary>
        /// Test RemoveCertificate
        /// </summary>
        [Test]
        public void RemoveCertificateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.RemoveCertificate(id);
            
        }
        
        /// <summary>
        /// Test RetrieveCertificate
        /// </summary>
        [Test]
        public void RetrieveCertificateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string host = null;
            //int? port = null;
            //string protocolHint = null;
            //var response = instance.RetrieveCertificate(host, port, protocolHint);
            //Assert.IsInstanceOf<ApiCertificate> (response, "response is ApiCertificate");
        }
        
    }

}
